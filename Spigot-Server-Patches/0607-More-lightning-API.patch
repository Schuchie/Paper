From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: KennyTV <jahnke.nassim@gmail.com>
Date: Sun, 26 Jul 2020 14:44:09 +0200
Subject: [PATCH] More lightning API


diff --git a/src/main/java/net/minecraft/server/EntityLightning.java b/src/main/java/net/minecraft/server/EntityLightning.java
index 180bfd4a60e18723b5fbae96123001284658afcb..5200b0396ee41edb42ff727c78cf3b5fce091d6b 100644
--- a/src/main/java/net/minecraft/server/EntityLightning.java
+++ b/src/main/java/net/minecraft/server/EntityLightning.java
@@ -11,7 +11,7 @@ public class EntityLightning extends Entity {
 
     private int lifeTicks;
     public long b;
-    private int d;
+    private int d; public int getFlashCount() { return d; } public void setFlashCount(int flashes) { this.d = flashes; } // Paper - OBFHELPER
     public boolean isEffect;
     @Nullable
     private EntityPlayer f;
@@ -29,6 +29,16 @@ public class EntityLightning extends Entity {
         this.isEffect = flag;
     }
 
+    // Paper start
+    public int getLifeTicks() {
+        return lifeTicks;
+    }
+
+    public void setLifeTicks(int lifeTicks) {
+        this.lifeTicks = lifeTicks;
+    }
+    // Paper end
+
     @Override
     public SoundCategory getSoundCategory() {
         return SoundCategory.WEATHER;
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftLightningStrike.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftLightningStrike.java
index 988386a9a7fb23e24ab14254d53895f9606c94f3..8016f4c053cca2b015150b2fe735958bd7c7cf92 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftLightningStrike.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftLightningStrike.java
@@ -45,4 +45,27 @@ public class CraftLightningStrike extends CraftEntity implements LightningStrike
         return spigot;
     }
     // Spigot end
+
+    // Paper start
+    @Override
+    public int getFlashCount() {
+        return getHandle().getFlashCount();
+    }
+
+    @Override
+    public void setFlashCount(int flashes) {
+        com.google.common.base.Preconditions.checkArgument(flashes >= 0, "Flashes has to be a positive number!");
+        getHandle().setFlashCount(flashes);
+    }
+
+    @Override
+    public int getLifeTicks() {
+        return getHandle().getLifeTicks();
+    }
+
+    @Override
+    public void setLifeTicks(int lifeTicks) {
+        getHandle().setLifeTicks(lifeTicks);
+    }
+    // Paper end
 }
